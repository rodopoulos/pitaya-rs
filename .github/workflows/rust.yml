name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Pitaya Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-make
        run: cargo install cargo-make

      - name: test pitaya
        run: |
          makers deps
          cargo test
          makers undeps

  build-mac:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Install fmt
        run: rustup component add rustfmt

      - name: Build Pitaya
        run: cargo build --release

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: libpitaya.dylib
          path: target/release/libpitaya.dylib

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Build Pitaya
        run: cargo build --release

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: libpitaya.so
          path: target/release/libpitaya.so

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust
        run: rustup update stable
      - name: Install clippy
        run: rustup component add clippy

      # Check fmt
      - name: "rustfmt --check"
        run: cargo fmt -- --check

      # Run clippy
      - name: "clippy --all"
        run: cargo clippy --all --tests

  nupkg:
    name: Create .nupkg
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - build-linux
      - build-mac
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # Download Linux binary
      - uses: actions/download-artifact@v2
        with:
          name: libpitaya.so

      # Download macOS binary
      - uses: actions/download-artifact@v2
        with:
          name: libpitaya.dylib
        
      # We have fix binaries permissions, because they're lost during artifact
      # upload.
      # Ref: https://github.com/actions/download-artifact#maintaining-file-permissions-and-case-sensitive-files
      - name: "Fix permissions"
        run: |
          chmod 744 libpitaya.dylib
          chmod 744 libpitaya.so

      - name: "Build NPitaya"
        run: |
          cd pitaya-sharp
          make pack

      - name: Upload NuPkg
        uses: actions/upload-artifact@v2
        with:
          name: NPitaya
          path: pitaya-sharp/NPitaya/bin/Release/*.nupkg
